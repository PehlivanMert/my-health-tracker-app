// Tema seÃ§eneklerini dinamik hale getirin
export const themes = [
  { value: "light", label: "AÃ§Ä±k ðŸŒž" },
  { value: "dark", label: "Koyu ðŸŒ™" },
  { value: "nature", label: "DoÄŸa ðŸŒ¿" },
  { value: "ocean", label: "Okyanus ðŸŒŠ" },
  { value: "sunset", label: "GÃ¼n BatÄ±mÄ± ðŸŒ…" },
  { value: "midnight", label: "Gece YarÄ±sÄ± ðŸŒƒ" },
  { value: "pastel", label: "Pastel ðŸŽ¨" },
  { value: "coffee", label: "Kahve â˜•" },
];

export const handleThemeChange = (newTheme, setTheme) => {
  setTheme(newTheme);
  localStorage.setItem("selectedTheme", newTheme); // SeÃ§ili temayÄ± kaydet
  document.documentElement.setAttribute("data-theme", newTheme); // Tema deÄŸiÅŸikliÄŸini uygula
};

// Sayfa yÃ¼klenmeden Ã¶nce varsayÄ±lan temayÄ± al ve uygula
export const getInitialTheme = () => {
  const savedTheme = localStorage.getItem("selectedTheme");
  // EÄŸer localStorage'da tema varsa onu kullan, yoksa "light" kullan
  const initialTheme = savedTheme || "light";

  // Sayfa yÃ¼klenmeden Ã¶nce temayÄ± uygula
  document.documentElement.setAttribute("data-theme", initialTheme);
  return initialTheme;
};
